version: "3"

env:
  SONARQUBE_URL: "http://SONAR_SERVER"
  SONARQUBE_TOKEN: "TOKEN"
  REGISTRY: "ghcr.io"
  REPOSITORY: "intelops"
  IMAGE_NAME: "python-taskfile"
  IMAGE_TAG: "v1"
  TARGET_URL: "http://APPLICATION_DOMAIN"
  ZAP_REPORT: "zap_report.html"
  POSTMAN_API_KEY: "somekey"

tasks:
  default:
    desc: "Display all tasks"
    cmds:
      - task --list-all

  install-deps:
    deps: [python-image]
    desc: "Install Dependencies"
    cmds:
      - docker run -v $(pwd):/app ghcr.io/open-containers/python-task:latest pip3 install -r requirements.txt
    preconditions:
      - sh: |
          if [ ! -f requirements.txt ]; then
            echo "requirements.txt not found"
            exit 1
          fi

  lint:
    desc: "Linting the code"
    deps: [python-image]
    cmds:
      - docker run -v $(pwd):/app  ghcr.io/open-containers/python-task:latest pylint **/*.py
    # preconditions:
    #   - sh: |
    #       if ! command -v pylint &> /dev/null; then
    #         echo "pylint could not be found"
    #         exit 1
    #       fi

  int-test:
    desc: "Run unit tests"
    deps: [python-image]
    cmds:
      - rm -rf testcontainers/venv
      - docker run -v $(pwd):/app ghcr.io/open-containers/python-task:latest python3 -m venv testcontainers/venv # Can we use {{ .CLI_ARGS }}
      - docker run -v $(pwd):/app ghcr.io/open-containers/python-task:latest pip3 install -r testcontainers/requirements.txt #  -- {{ .CLI_ARGS }}
      - docker run -v $(pwd):/app ghcr.io/open-containers/python-task:latest pytest testcontainers # -- {{ .CLI_ARGS }}
    # preconditions:
    # - sh: |
    #     if ! command -v pytest &> /dev/null; then
    #       echo "pytest could not be found"
    #       exit 1
    #     fi

  unit-test:
    desc: "Run unit tests"
    deps: [python-image]
    cmds:
      - docker run -v $(pwd):/app ghcr.io/open-containers/python-task:latest pytest -v -o log_cli=true --log-level=DEBUG
    # preconditions:
    #   - sh: |
    #       if ! command -v pytest &> /dev/null; then
    #         echo "pytest could not be found"
    #         exit 1
    #       fi

  build:
    desc: "Build Docker Image"
    deps: [docker-image]
    cmds:
      - docker build -t $REGISTRY/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG .
    # preconditions:
    #   - sh: |
    #       if ! command -v docker &> /dev/null; then
    #         echo "docker could not be found"
    #         exit 1
    #       fi

  scan:
    desc: "Scan Docker Image"
    deps: [build, trivy-image]
    cmds:
      - docker run -v $(pwd):/app ghcr.io/open-containers/trivy-task:latest trivy -- {{ .CLI_ARGS }}
    # preconditions:
    #   - sh: |
    #       if ! command -v trivy &> /dev/null; then
    #         echo "trivy could not be found"
    #         exit 1
    #       fi

  zap:
    desc: "Run OWASP ZAP Scan"
    # This task might not run as zap2docker-stable image is now not available
    cmds:
      - docker run -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py -t $TARGET_URL -r $ZAP_REPORT
    # preconditions:
    #   - sh: |
    #       if ! command -v docker &> /dev/null; then
    #         echo "docker could not be found"
    #         exit 1
    #       fi
    silent: false

  fuzztest:
    desc: "Run the fuzz testing"
    cmds:
      - docker compose build fuzz && docker compose run --service-ports fuzz
    # preconditions:
    #   - sh: |
    #       if ! command -v docker &> /dev/null; then
    #         echo "docker could not be found"
    #         exit 1
    #       fi
    silent: false

  postman_run:
    desc: "Run Postman"
    cmds:
      - postman login --with-api-key $POSTMAN_API_KEY
      - echo "postman run commands"
    preconditions:
      - sh: |
          if ! command -v postman  &> /dev/null; then
            echo "postman could not be found"
            exit 1
          fi
    silent: false

  ci:
    desc: "Run full CI pipeline"
    deps: [install-deps, lint, unit-test, scan, zap]

  python-image:
    desc: Pulls required python bundle image required by above tasks
    cmds:
      - docker pull ghcr.io/open-containers/python-task:latest

  trivy-image:
    desc: Pulls Trivy image required for above task
    cmds:
      - docker pull ghcr.io/open-containers/trivy-task:latest
